Profile: GEM_ERP_PR_Task
Parent: Task
Id: GEM-ERP-PR-Task
Title: "Task for Management of ePrescription Workflow"
Description: "This resource manages the ePrescription workflow"
* insert Profile(GEM_ERP_PR_Task)
* extension ^slicing.rules = #closed
* extension contains GEM_ERP_EX_PrescriptionType named flowType 1..1
* extension contains GEM_ERP_EX_AcceptDate named acceptDate 0..1
* extension contains GEM_ERP_EX_ExpiryDate named expiryDate 0..1
* extension contains GEM_ERP_EX_LastMedicationDispense named lastMedicationDispense 0..1
* identifier ^slicing.discriminator.type = #value
* identifier ^slicing.discriminator.path = "system"
* identifier ^slicing.description = "The task ressource contains three identifier. The first one is the identifier for the ask representing one e-prescription. The other identifier are representing the patient as owner of the prescription. One is the \"Krankenversichertennummer\" which identify each patient by his health insurance company and the other is \"Institutionskennzeichen\"."
* identifier ^slicing.rules = #closed
* identifier contains
    PrescriptionID 1..1 and
    AccessCode 0..1 and
    Secret 0..1
* identifier[PrescriptionID] only GEM_ERP_PR_PrescriptionId
* identifier[PrescriptionID] ^short = "Prescription Identifier"
* identifier[PrescriptionID] ^definition = "The prescription identifier is the main identifier for the task ressource and the whole prescription workflow. This identifier is genereted by the \"E-Rezept Fachdienst\" and should not be changed manually."
* identifier[AccessCode] ^short = "AccessCode Identifier"
* identifier[AccessCode] ^definition = "Generated by the \"E-Rezept Fachdienst\". This identifier is transported in every task request."
* identifier[AccessCode].system 1..
* identifier[AccessCode].system = "https://gematik.de/fhir/erp/NamingSystem/GEM_ERP_NS_AccessCode" (exactly)
* identifier[AccessCode].value 1..
* identifier[Secret] ^short = "Secret"
* identifier[Secret].system 1..
* identifier[Secret].system = "https://gematik.de/fhir/erp/NamingSystem/GEM_ERP_NS_Secret" (exactly)
* identifier[Secret].value 1..
* intent = #order (exactly)
* for ^short = "Identifier of Patient (KVID or PKV-Identifier)"
* for.identifier only IdentifierKvid10
* performerType.coding from GEM_ERP_VS_OrganizationType (required)
* performerType.coding 1..
* input ..2 MS
* input ^slicing.discriminator.type = #value
* input ^slicing.discriminator.path = "type.coding.code"
* input ^slicing.rules = #closed
* input ^short = "Input Bundle"
* input ^definition = "Reference to ePrescription input and outcome during the process"
* input contains
    ePrescription 0..1 and
    patientReceipt 0..1

// QES Binary ePrescription
* input[ePrescription].type.coding from GEM_ERP_VS_DocumentType (required)
* input[ePrescription].type.coding.system 1..
* input[ePrescription].type.coding.code 1..
* input[ePrescription].type.coding.code = #1 (exactly)
* input[ePrescription].value[x] only Reference(GEM_ERP_PR_Binary)
* input[ePrescription].value[x].reference 1..
* input[ePrescription] ^short = "QES-Binary of the ePrescription"

// ePriscription for the patient
* input[patientReceipt].type.coding from GEM_ERP_VS_DocumentType (required)
* input[patientReceipt].type.coding.system 1..
* input[patientReceipt].type.coding.code 1..
* input[patientReceipt].type.coding.code = #2 (exactly)
* input[patientReceipt].value[x] only Reference($KBV_PR_ERP_Bundle)
* input[patientReceipt] ^short = "JSON Bundle of the ePrescription to be consumed by the E-Rezept-FdV"

* output ..1 MS
* output ^slicing.discriminator.type = #value
* output ^slicing.discriminator.path = "type.coding.code"
* output ^slicing.rules = #closed
* output ^short = "Output Bundle"
* output ^definition = "Reference to the Bundle which represent the receipt."
* output contains receipt 0..1

// Receipt
* output[receipt].type.coding from GEM_ERP_VS_DocumentType (required)
* output[receipt].type.coding.system 1..
* output[receipt].type.coding.code 1..
* output[receipt].type.coding.code = #3 (exactly)
* output[receipt].value[x] only Reference(GEM_ERP_PR_Bundle)
